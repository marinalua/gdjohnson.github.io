/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./main.js":
/*!*****************!*\
  !*** ./main.js ***!
  \*****************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var track0;\nvar track1;\nvar track2;\nvar track3;\nvar track4;\nvar tracks;\nvar wf;\nvar songEffects = [];\nvar latest;\nwindow.addEventListener('DOMContentLoaded', function () {\n  document.getElementById('reset').addEventListener('click', resetTrack);\n  document.getElementById('paused').addEventListener('click', togglePlayback);\n  document.getElementById('rev-guide').addEventListener('mouseenter', revealReverb);\n  document.getElementById('rev-guide').addEventListener('mouseleave', hideReverb);\n  setToggles();\n  activateNav();\n  loadTracks({\n    target: {\n      innerText: \"Something\"\n    },\n    style: true\n  }); // document.getElementById('reset').addEventListener('click', tourTrack);\n});\n\nvar activateNav = function activateNav() {\n  var navLinks = Array.from(document.getElementById('nav-bar-tracks').children).slice(1);\n  navLinks[3].style.background = \"#75757542\";\n  navLinks[3].style.color = \"green\";\n  navLinks.forEach(function (link) {\n    return link.addEventListener('click', function (e) {\n      return navAction(e);\n    });\n  });\n};\n\nvar navAction = function navAction(event) {\n  latest = event;\n  resetNav(event);\n  resetTrack();\n};\n\nvar resetNav = function resetNav(event) {\n  var navLinks = Array.from(document.getElementById('nav-bar-tracks').children).slice(1);\n  var linkStyle = event.target.style;\n  navLinks.forEach(function (link) {\n    link.style.color = \"\";\n    link.style.background = \"\";\n  });\n  linkStyle.color = \"green\";\n  linkStyle.background = \"#75757542\";\n};\n\nvar setToggles = function setToggles() {\n  Array.from(document.getElementsByClassName('toggle')).forEach(function (toggle) {\n    return Array.from(toggle.children).forEach(function (childButton) {\n      childButton.style.color = \"inherit\";\n      childButton.addEventListener('click', eventInterpreter);\n    });\n  });\n}; // CONFIGURE AUDIO\n\n\nvar loadTracks = function loadTracks(event) {\n  latest = event;\n  tracksLoading();\n  populateAudio(event);\n};\n\nvar populateAudio = function populateAudio(event) {\n  var trackButtons = [];\n  var selection = event.target.innerText;\n  document.getElementById('track-title').innerText = selection;\n\n  for (i = 0; i < 5; i++) {\n    trackButtons.push(document.getElementById(\"track-\".concat(i)).firstElementChild);\n  }\n\n  var loadingMsg = document.getElementById('loading-wrap').children[1]; // Track loading is structured as a series of callbacks, called when the parent function\n  // is loaded & ready to play\n\n  if (selection == \"Don't Let Me Down\") {\n    track0 = new Pizzicato.Sound(\"./audio/Don't Let Me Down (drums).mp3\", function () {\n      loadWaveform(\"./audio/Don't Let Me Down.mp3\");\n      track1 = new Pizzicato.Sound(\"./audio/Don't Let Me Down (bass).mp3\", function () {\n        track2 = new Pizzicato.Sound(\"./audio/Don't Let Me Down (guitar).mp3\", function () {\n          loadingMsg.innerText = \"Buffering...\";\n          track3 = new Pizzicato.Sound(\"./audio/Don't Let Me Down (vox).mp3\", function () {\n            track4 = new Pizzicato.Sound(\"./audio/Don't Let Me Down (organ).mp3\", function () {\n              trackButtons[0].innerHTML = \"Drums\";\n              trackButtons[1].innerHTML = \"Bass\";\n              trackButtons[2].innerHTML = \"Guitar\";\n              trackButtons[3].innerHTML = \"Vox\";\n              trackButtons[4].innerHTML = \"Organ\";\n              wf = \"./audio/Don't Let Me Down (organ).mp3\";\n              tracks = [track0, track1, track2, track3, track4];\n              addEffects(tracks);\n            });\n          });\n        });\n      });\n    });\n  }\n\n  if (selection == \"Lucy in the Sky with...\") {\n    track0 = new Pizzicato.Sound(\"./audio/Lucy (drums).mp3\", function () {\n      loadWaveform(\"./audio/Lucy.mp3\");\n      track1 = new Pizzicato.Sound(\"./audio/Lucy (bass).mp3\", function () {\n        track2 = new Pizzicato.Sound(\"./audio/Lucy (organ).mp3\", function () {\n          loadingMsg.innerText = \"Buffering...\";\n          track3 = new Pizzicato.Sound(\"./audio/Lucy (vox).mp3\", function () {\n            track4 = new Pizzicato.Sound(\"./audio/Lucy (acoustic + organ).mp3\", function () {\n              trackButtons[0].innerHTML = \"Drums\";\n              trackButtons[1].innerHTML = \"Bass\";\n              trackButtons[2].innerHTML = \"Lowrey Organ\";\n              trackButtons[3].innerHTML = \"Vox\";\n              trackButtons[4].innerHTML = \"Acoustic + Organ\";\n              tracks = [track0, track1, track2, track3, track4];\n              wf = \"./audio/Lucy (acoustic + organ).mp3\";\n              addEffects(tracks);\n            });\n          });\n        });\n      });\n    });\n  }\n\n  if (selection == \"Norwegian Wood\") {\n    track0 = new Pizzicato.Sound(\"./audio/Norwegian Wood (drums).mp3\", function () {\n      loadWaveform(\"./audio/Norwegian Wood.mp3\");\n      track1 = new Pizzicato.Sound(\"./audio/Norwegian Wood (bass).mp3\", function () {\n        track2 = new Pizzicato.Sound(\"./audio/Norwegian Wood (sitar).mp3\", function () {\n          loadingMsg.innerText = \"Buffering...\";\n          track3 = new Pizzicato.Sound(\"./audio/Norwegian Wood (vox + guitar).mp3\", function () {\n            track4 = new Pizzicato.Sound(\"./audio/Norwegian Wood (count).mp3\", function () {\n              trackButtons[0].innerHTML = \"Drums\";\n              trackButtons[1].innerHTML = \"Bass\";\n              trackButtons[2].innerHTML = \"Sitar\";\n              trackButtons[3].innerHTML = \"Vox + Guitar\";\n              trackButtons[4].innerHTML = \"Count\";\n              tracks = [track0, track1, track2, track3, track4];\n              wf = \"./audio/Norwegian Wood (count).mp3\";\n              addEffects(tracks);\n            });\n          });\n        });\n      });\n    });\n  }\n\n  if (selection == \"Something\") {\n    track0 = new Pizzicato.Sound(\"./audio/Something (drums).mp3\", function () {\n      loadWaveform(\"./audio/Something.mp3\");\n      track1 = new Pizzicato.Sound(\"./audio/Something (bass).mp3\", function () {\n        track2 = new Pizzicato.Sound(\"./audio/Something (guitar).mp3\", function () {\n          loadingMsg.innerText = \"Buffering...\";\n          track3 = new Pizzicato.Sound(\"./audio/Something (vox).mp3\", function () {\n            track4 = new Pizzicato.Sound(\"./audio/Something (orchestral).mp3\", function () {\n              trackButtons[0].innerHTML = \"Drums\";\n              trackButtons[1].innerHTML = \"Bass\";\n              trackButtons[2].innerHTML = \"Guitar\";\n              trackButtons[3].innerHTML = \"Vox\";\n              trackButtons[4].innerHTML = \"Orchestra\";\n              tracks = [track0, track1, track2, track3, track4];\n              addEffects(tracks);\n            });\n          });\n        });\n      });\n    });\n  }\n\n  if (selection == \"I Want You\") {\n    track0 = new Pizzicato.Sound(\"./audio/I Want You (drums).mp3\", function () {\n      loadWaveform(\"./audio/I Want You.mp3\");\n      track1 = new Pizzicato.Sound(\"./audio/I Want You (bass).mp3\", function () {\n        track2 = new Pizzicato.Sound(\"./audio/I Want You (guitar).mp3\", function () {\n          loadingMsg.innerText = \"Buffering...\";\n          track3 = new Pizzicato.Sound(\"./audio/I Want You (vox).mp3\", function () {\n            track4 = new Pizzicato.Sound(\"./audio/I Want You (organ).mp3\", function () {\n              trackButtons[0].innerHTML = \"Drums\";\n              trackButtons[1].innerHTML = \"Bass\";\n              trackButtons[2].innerHTML = \"Guitar\";\n              trackButtons[3].innerHTML = \"Vox\";\n              trackButtons[4].innerHTML = \"Organ\";\n              tracks = [track0, track1, track2, track3, track4];\n              addEffects(tracks);\n            });\n          });\n        });\n      });\n    });\n  }\n};\n\nvar addEffects = function addEffects(tracks) {\n  tracks = tracks.map(function (track, idx) {\n    var reverb = new Pizzicato.Effects.Reverb({\n      time: 0,\n      decay: 0,\n      mix: 0\n    });\n    var distortion = new Pizzicato.Effects.Distortion({\n      gain: 0\n    });\n    var pan = new Pizzicato.Effects.StereoPanner({\n      pan: 0.0\n    });\n    songEffects.push({\n      reverb: reverb,\n      distortion: distortion,\n      pan: pan\n    });\n    track.addEffect(songEffects[idx].reverb);\n    track.addEffect(songEffects[idx].distortion);\n    track.addEffect(songEffects[idx].pan);\n    return track;\n  });\n  addListeners(tracks);\n}; // Adapted event listener by Andrew Willems. Tracks live range input changes cross-browser\n\n\nfunction onRangeChange(rangeInputElmt, changeMonitor) {\n  var inputEvtHasNeverFired = true;\n  var rangeValue = {\n    current: undefined,\n    mostRecent: undefined\n  };\n  rangeInputElmt.addEventListener(\"input\", function (event) {\n    inputEvtHasNeverFired = false;\n    rangeValue.current = event.target.value;\n\n    if (rangeValue.current !== rangeValue.mostRecent) {\n      changeMonitor(event);\n    }\n\n    rangeValue.mostRecent = rangeValue.current;\n  });\n  rangeInputElmt.addEventListener(\"change\", function (event) {\n    if (inputEvtHasNeverFired) {\n      changeMonitor(event);\n    }\n  });\n}\n\nvar changeMonitor = function changeMonitor(event) {\n  document.getElementById('global-value').innerText = event.target.value;\n};\n\nvar addListeners = function addListeners(tracks) {\n  tracks.forEach(function (track, idx) {\n    var vol = document.getElementById(\"t\".concat(idx, \"-vol\"));\n    onRangeChange(vol, changeMonitor);\n    vol.addEventListener('mouseup', function (e) {\n      return track.volume = e.target.valueAsNumber;\n    });\n    var time = document.getElementById(\"t\".concat(idx, \"-reverb-time\"));\n    onRangeChange(time, changeMonitor);\n    time.addEventListener('mouseup', function (e) {\n      return songEffects[idx].reverb.time = e.target.valueAsNumber;\n    });\n    var decay = document.getElementById(\"t\".concat(idx, \"-reverb-decay\"));\n    onRangeChange(decay, changeMonitor);\n    decay.addEventListener('mouseup', function (e) {\n      return songEffects[idx].reverb.decay = e.target.valueAsNumber;\n    });\n    var mix = document.getElementById(\"t\".concat(idx, \"-reverb-mix\"));\n    onRangeChange(mix, changeMonitor);\n    mix.addEventListener('mouseup', function (e) {\n      return songEffects[idx].reverb.mix = e.target.valueAsNumber;\n    });\n    var gain = document.getElementById(\"t\".concat(idx, \"-dist-gain\"));\n    onRangeChange(gain, changeMonitor);\n    gain.addEventListener('mouseup', function (e) {\n      return songEffects[idx].distortion.gain = e.target.valueAsNumber;\n    });\n    var pan = document.getElementById(\"t\".concat(idx, \"-pan\"));\n    onRangeChange(pan, changeMonitor);\n    pan.addEventListener('mouseup', function (e) {\n      return songEffects[idx].pan.pan = e.target.valueAsNumber;\n    });\n  });\n  tracksLoaded();\n};\n\nvar tracksLoading = function tracksLoading() {\n  document.getElementById('loading-wrap').style.display = \"flex\";\n  document.getElementsByClassName('playback')[0].style.display = \"none\";\n};\n\nvar tracksLoaded = function tracksLoaded() {\n  document.getElementById('loading-wrap').style.display = \"none\";\n  document.getElementById('paused').style.display = \"flex\";\n};\n\nvar resetTrack = function resetTrack() {\n  wavesurfer.stop();\n  tracks.forEach(function (track) {\n    track.stop();\n  });\n  setToggles();\n  songEffects = [];\n  loadTracks(latest);\n  Array.from(document.getElementsByClassName('input-wrapper')).forEach(function (wrapper) {\n    return Array.from(wrapper.children).forEach(function (input) {\n      if (input.id.slice(3) == \"vol\") {\n        input.value = \"0.7\";\n      } else if (input.id.slice(3) == \"reverb-time\") {\n        input.value = \".01\";\n      } else {\n        input.value = \"0\";\n      }\n\n      ;\n    });\n  });\n  var playback = document.getElementsByClassName('playback')[0];\n  playback.children[0].name = 'play';\n  playback.children[1].innerText = ' Play';\n  playback.id = \"paused\";\n};\n\nvar togglePlayback = function togglePlayback(e) {\n  var playback = document.getElementsByClassName('playback')[0];\n\n  if (playback.id == \"paused\") {\n    setTimeout(function () {\n      wavesurfer.play();\n      tracks.forEach(function (track) {\n        return track.play();\n      });\n      playback.children[0].name = 'pause';\n      playback.children[1].innerText = \" Pause\";\n      playback.id = \"playing\";\n    }, 100);\n  } else {\n    setTimeout(function () {\n      wavesurfer.pause();\n      tracks.forEach(function (track) {\n        track.pause();\n      });\n      playback.children[0].name = 'play';\n      playback.children[1].innerText = ' Play';\n      playback.id = \"paused\";\n    }, 100);\n  }\n}; // TOGGLES\n\n\nvar eventInterpreter = function eventInterpreter(event) {\n  var track = tracks[parseInt(event.target.parentElement.parentElement.parentElement.id.slice(6))];\n  var action = event.target.innerHTML;\n\n  if (action == \"Solo\") {\n    event.target.style.color = \"green\";\n    solo(track);\n  }\n\n  if (action == \"Add\") {\n    event.target.style.color = \"yellow\";\n    add(track);\n  }\n\n  if (action == \"Mute\") {\n    event.target.style.color = \"red\";\n    mute(track);\n  }\n};\n\nvar solo = function solo(soloTrack) {\n  tracks.forEach(function (track) {\n    if (track !== soloTrack) {\n      track.volume = 0;\n    }\n  });\n\n  if (soloTrack.volume < .1) {\n    soloTrack.volume = .7;\n  }\n};\n\nvar add = function add(track) {\n  track.volume = 1;\n};\n\nvar mute = function mute(track) {\n  track.volume = 0;\n}; // WAVEFORM\n\n\nvar wavesurfer = WaveSurfer.create({\n  container: '#waveform',\n  waveColor: '#999999',\n  progressColor: '#666666',\n  height: '70',\n  barWidth: '3',\n  hideScrollbar: true\n});\n\nvar loadWaveform = function loadWaveform(input) {\n  document.getElementById('loading-wrap').children[1].innerText = \"Drawing...\";\n  wavesurfer.load(input);\n  wavesurfer.setMute(true);\n}; // HOVER\n\n\nvar revealReverb = function revealReverb(event) {\n  var t = event.target;\n\n  var spacing = function spacing(n) {\n    var str = \"\";\n\n    for (i = 0; i < n; i++) {\n      str += \"&nbsp;\";\n    }\n\n    return str;\n  };\n\n  t.innerHTML = \"Time \".concat(spacing(11), \" Decay \").concat(spacing(13), \" Mix\");\n};\n\nvar hideReverb = function hideReverb(event) {\n  var t = event.target;\n  t.innerHTML = \"Reverb\";\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./main.js\n");

/***/ })

/******/ });